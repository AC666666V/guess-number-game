name: Build Android APK

# 触发条件：推送或PR到主分支时运行
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest  # 基于Ubuntu最新环境构建

    steps:
      # 步骤1：检出仓库代码（使用最新版Action）
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：配置Python环境（3.9版本兼容性最佳）
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 步骤3：安装系统级依赖（Android构建必需工具）
      - name: Install system dependencies
        run: |
          sudo apt-get update
          # 安装Java、压缩工具、SSL库等核心依赖
          sudo apt-get install -y openjdk-11-jdk zlib1g-dev libncurses5-dev \
            libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev \
            wget unzip  # unzip用于解压Android SDK组件

      # 步骤4：预安装Buildozer依赖（确保首次运行能正确初始化环境）
      - name: Pre-install buildozer dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython  # 提前安装核心工具

      # 步骤5：手动接受Android SDK许可证（关键：解决许可未接受问题）
      - name: Accept Android SDK licenses
        run: |
          # 先让Buildozer初始化Android环境（自动下载基础SDK）
          buildozer android debug 2>/dev/null || true  # 忽略首次运行的错误，仅初始化环境
          # 进入SDK的licenses目录，创建接受文件（强制接受所有许可）
          mkdir -p ~/.buildozer/android/platform/android-sdk/licenses
          echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c5" > ~/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" >> ~/.buildozer/android/platform/android-sdk/licenses/android-sdk-license

      # 步骤6：正式构建APK（使用稳定的SDK版本，自动接受许可）
      - name: Build APK
        run: buildozer android debug --accept-licenses

      # 步骤7：上传构建产物（APK文件）
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: guess-number-apk
          path: bin/*.apk  # APK默认生成路径（与buildozer.spec配置一致）
