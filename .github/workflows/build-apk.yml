name: 构建猜数字游戏APK

# 触发条件：推送或PR到主分支时运行
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40  # 延长超时时间，避免构建中断

    steps:
      # 步骤1：检出仓库代码
      - name: 检出代码
        uses: actions/checkout@v4

      # 步骤2：配置Python环境（与项目依赖匹配）
      - name: 配置Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 步骤3：安装系统级依赖（Android构建必需）
      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk zlib1g-dev libncurses5-dev \
            libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev \
            wget unzip

      # 步骤4：安装Python依赖（Buildozer、Cython、Kivy等）
      - name: 安装Python依赖
        run: |
          python -m pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.36 kivy==2.2.1

      # 步骤5：初始化Android环境并接受许可证（解决许可问题）
      - name: 初始化Android环境并接受许可
        run: |
          # 预运行Buildozer，触发SDK基础文件下载
          buildozer android debug 2>/dev/null || true
          # 强制创建许可证文件
          mkdir -p ~/.buildozer/android/platform/android-sdk/licenses
          echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c5" > ~/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" >> ~/.buildozer/android/platform/android-sdk/licenses/android-sdk-license

      # 步骤6：正式构建APK
      - name: 构建APK
        run: buildozer android debug --accept-licenses

      # 步骤7：上传APK产物
      - name: 上传APK
        uses: actions/upload-artifact@v4
        with:
          name: 猜数字游戏APK
          path: bin/*.apk
